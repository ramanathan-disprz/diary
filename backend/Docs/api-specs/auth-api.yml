openapi: 3.0.3
info:
  title: Auth API
  version: 1.0.0
  description: API for user authentication and registration

servers:
  - url: http://localhost:5220/v1
    description: Local development server

paths:
  /auth/register:
    post:
      summary: Register a new user
      description: Creates a new user account.
      operationId: RegisterUser
      tags:
        - Auth
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UserRequest"
      responses:
        "201":
          description: User successfully registered
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserDto"
        "400":
          description: Bad request - invalid input
        "500":
          description: Server error

  /auth/login:
    post:
      summary: Login a user
      description: Authenticates a user and returns a JWT token.
      operationId: LoginUser
      tags:
        - Auth
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/LoginRequest"
      responses:
        "200":
          description: User successfully authenticated
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AuthResponseDto"
        "400":
          description: Bad request - invalid input
        "401":
          description: Unauthorized - invalid credentials
        "500":
          description: Server error

components:
  schemas:
    UserDto:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 1
        name:
          type: string
          example: "John Doe"
        email:
          type: string
          format: email
          example: "john.doe@example.com"

    UserRequest:
      type: object
      properties:
        name:
          type: string
          example: "John Doe"
        email:
          type: string
          format: email
          example: "john.doe@example.com"
        password:
          type: string
          example: "password123"

    LoginRequest:
      type: object
      properties:
        email:
          type: string
          format: email
          example: "john.doe@example.com"
        password:
          type: string
          example: "password123"

    AuthResponseDto:
      type: object
      properties:
        token:
          type: string
          example: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."

